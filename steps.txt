Part 2:
    1. 
    2.
    3.
    4.
    5.

part 3:
    1. make flask pod yaml
    2. make mongo pod yaml
    3. make mongo persistent volume claim : mongo requires a fixed space to operate in
    4. kubectl create -f flask-pod.yaml/kubectl create -f mongo-pod.yaml to create pods yourself
    5. Deployment creates its own pods.
    6. kubectl create deployment todo-app --image=barariaswati/f1:recent --replicas=1 --port=5000
    7. kubectl apply -f mongo-pod.yaml
    8. kubectl apply -f mongo-pvc.yaml
    9. minikube service todo-app --url
    10. get deployment script using: kubectl get deployment todo-app -o yaml > my-deployment.yaml
    11. command to edit deployment: kubectl edit deployment todo-app or use apply command

part 4:
    1. Make a cluster. eg. ccbd_eks
    2. Make add a access key in security credentials.
    3. aws configure. add deets from the point 2 here. access key and secret.
    4. install aws-iam-authenticator using {brew install aws-iam-authenticator}
    5. After eks cluster is done creating, do {aws eks update-kubeconfig --name ccbd_eks}
    6. To test if this works now, do {kubectl get svc}
    7. 

Part 5:
    1. kubectl get pods
    2. kubectl delete pods <pod name>
    3. change replicas count
    4. kubectl edit deployment todo-app
    5. press i , make edit , press esc + :wq + enter

Part 6:
    1. Making image new version: docker build -t barariaswati/f1:v2 .
    2. docker push barariaswati/f1:v2 
    3. kubectl edit deployment todo-app
    4. kubectl rollout status deployment/todo-app

Part 7: 
    1. 

